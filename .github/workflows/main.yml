name: Build

on:
  pull_request:
  push:
    branches:
    - main
    - feat/ci
    tags:
    - "v*"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, 'pypy-3.6', 'pypy-3.7']
        os: [ubuntu-latest]

    name: ${{ matrix.os }} - Python ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v2
    - name: Get history and tags for SCM versioning to work
      run: |
        git fetch --prune --unshallow
        git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install pytest
        mkdir /tmp/antlr/
        wget https://www.antlr.org/download/antlr-4.7.1-complete.jar -P /tmp/antlr/
        export CLASSPATH=/tmp/antlr/antlr-4.7.1-complete.jar
        python generate_grammar.py
        pip install .
    - name: Run Pytest
      run: pytest .

  dist:
    runs-on: ubuntu-latest
    needs: [test]
    name: Build Python packages
    steps:
    - uses: actions/checkout@v2
    - name: Get history and tags for SCM versioning to work
      run: |
        git fetch --prune --unshallow
        git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        mkdir /tmp/antlr/
        wget https://www.antlr.org/download/antlr-4.7.1-complete.jar -P /tmp/antlr/
        export CLASSPATH=/tmp/antlr/antlr-4.7.1-complete.jar
        pip install --upgrade wheel setuptools build
    - name: Build packages
      run: python -m build -s -w -o dist/
    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist

  dist_check:
    runs-on: ubuntu-latest
    needs: [dist]
    name: Twine check
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: pip install twine
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist
    - run: twine check dist/*
